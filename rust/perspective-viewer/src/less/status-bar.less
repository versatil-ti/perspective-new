// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
// ┃ ██████ ██████ ██████       █      █      █      █      █ █▄  ▀███ █       ┃
// ┃ ▄▄▄▄▄█ █▄▄▄▄▄ ▄▄▄▄▄█  ▀▀▀▀▀█▀▀▀▀▀ █ ▀▀▀▀▀█ ████████▌▐███ ███▄  ▀█ █ ▀▀▀▀▀ ┃
// ┃ █▀▀▀▀▀ █▀▀▀▀▀ █▀██▀▀ ▄▄▄▄▄ █ ▄▄▄▄▄█ ▄▄▄▄▄█ ████████▌▐███ █████▄   █ ▄▄▄▄▄ ┃
// ┃ █      ██████ █  ▀█▄       █ ██████      █      ███▌▐███ ███████▄ █       ┃
// ┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
// ┃ Copyright (c) 2017, the Perspective Authors.                              ┃
// ┃ ╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌ ┃
// ┃ This file is part of the Perspective library, distributed under the terms ┃
// ┃ of the [Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0). ┃
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

:host {
    #status_bar.titled {
        padding-right: 108px;

        #menu-bar {
            opacity: 0.2;
        }
    }

    // When settings open ...
    #main_column #status_bar,
    #main_column #status_bar.titled {
        padding-right: 36px;

        input::placeholder {
            color: var(--inactive--color);
        }

        #menu-bar {
            opacity: 1;
        }
    }

    #status_bar {
        overflow: hidden;
        box-shadow: 0 13px 0 -12px var(--inactive--border-color);
        z-index: 1;
        display: flex;
        align-items: center;
        background: var(--plugin--background);
        padding-left: 4px;
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: var(--status-bar--height, 48px);
        border-radius: var(--status-bar--border-radius);
        #status-bar-placeholder {
            margin: 0px;
            pointer-events: none;
        }

        input {
            font-size: 1em;
        }

        input:placeholder-shown + #status-bar-placeholder:before {
            content: var(--untitled--content, "untitled");
            color: var(--inactive--color);
        }

        .input-sizer {
            opacity: 0;
            align-items: center;
            position: relative;
            margin-top: 1px;
            min-width: 65px;
            overflow: hidden;

            &:after,
            input,
            textarea {
                width: auto;
                grid-area: 1 / 1;
                font-family: inherit;
            }

            input,
            textarea {
                // grid-area: 1 / 1;
                position: absolute;
                left: 0;
                right: 0;
                text-overflow: ellipsis;
                padding: 0;
                border: none;
                background: transparent;
                color: inherit;
                height: 100%;
            }

            &:after {
                content: attr(data-value) " ";
                color: var(--inactive--color, inherit);
                visibility: hidden;
                white-space: nowrap;
                padding-right: 12px;
            }

            &:focus-within {
                textarea:focus,
                input:focus {
                    outline: none;
                }
            }
        }

        .app-title {
            margin-left: 12px;
            font-size: 16px;
        }

        .section {
            display: flex;
            align-items: center;
        }

        #rows {
            opacity: 0;
            flex: 1 1000 auto;
            overflow: hidden;
            span {
                white-space: nowrap;
            }
        }

        // Exceptions when the menu bar is visible and the settings panel is closed.

        #menu-bar {
            overflow: hidden;
            flex: 0 1000000 auto;
            .button {
                height: 22px;
                select {
                    height: 20px;
                    font-size: var(--label--font-size, 0.75em);
                }
            }
        }

        #plugin-settings {
            margin-left: auto;
        }

        #counter-arrow:before {
            content: var(--status-bar-counter--content, "arrow_back");
        }

        span {
            // font-size: var(--label--font-size, 0.75em);
            margin: 0px 10px;
            user-select: none;
            height: 100%;
            line-height: 36px;

            &:before {
                margin-right: 4px;
                position: relative;
            }

            &:hover {
                color: inherit;
            }
        }

        span#rows {
            margin-left: 2px;
        }

        span.icon {
            height: 100%;
            line-height: 36px;
            margin: 0;
        }

        span#status {
            &:before {
                top: -1px;
                color: #ccc;
                font-size: 8px;
                content: var(--status-icon--content, "\2B24");
            }

            &.connected,
            &.error,
            &.initializing {
                opacity: 1;
            }

            &.connected:before {
                color: var(--status-icon-connected--color, rgb(51, 159, 77));
            }

            &.initializing:before {
                color: var(
                    --status-icon-initializing--color,
                    rgb(223, 198, 57)
                );
            }

            &.error:before {
                color: var(--status-icon-error--color, rgb(252, 64, 52));
            }
        }

        span.button:before {
            height: 21px;
            width: 21px;
            background-repeat: no-repeat;
            background-color: var(--icon--color);
            content: "";
            -webkit-mask-size: cover;
            mask-size: cover;
            pointer-events: none;
        }

        span#export {
            &:before {
                -webkit-mask-image: url("../svg/export-icon.svg");
                mask-image: url("../svg/export-icon.svg");
            }
            span:before {
                content: var(--export-button--content, "Export");
            }
        }

        span#lock {
            &:before {
                -webkit-mask-image: url("../svg/free-scroll-icon.svg");
                mask-image: url("../svg/free-scroll-icon.svg");
            }
            // span:before {
            //     content: var(--export-button--content, "Export");
            // }
        }

        span#reset {
            &:before {
                -webkit-mask-image: url("../svg/revert-icon.svg");
                mask-image: url("../svg/revert-icon.svg");
            }
            span:before {
                content: var(--reset-button--content, "Reset");
            }
        }

        span#copy {
            &:before {
                -webkit-mask-image: url("../svg/duplicate-icon.svg");
                mask-image: url("../svg/duplicate-icon.svg");
            }
            span:before {
                content: var(--copy-button--content, "Copy");
            }
        }

        span#theme {
            &:before {
                -webkit-mask-image: url("../svg/theme-icon.svg");
                mask-image: url("../svg/theme-icon.svg");
            }
        }

        span.button {
            display: inline-flex;
            align-items: center;
            margin: 0px;
            padding: 0 5px 0px 5px;
            color: var(--inactive--color, #ccc);
            border: 1px solid transparent;
            border-radius: 3px;
            font-size: var(--label--font-size, 0.75em);

            & > span,
            & > .dropdown-width-container {
                pointer-events: none;
                overflow: hidden;
                display: none;
            }

            &:before {
                z-index: 1;
            }

            &:hover select {
                background-color: transparent;
            }

            &:hover,
            &.modal-target {
                min-width: var(--button--min-width, 75px);
                color: inherit;
                cursor: pointer;
                transition: none;
                // border: 1px solid var(--inactive--color);
                background-color: var(--icon--color);
                color: var(--plugin--background);

                &:before {
                    background-color: var(--plugin--background);
                }

                & > span {
                    display: contents;
                }

                & > .dropdown-width-container {
                    overflow: visible;
                    display: inline;
                    pointer-events: all;
                    & > select {
                        cursor: pointer;
                        margin-left: -28px;
                        padding-left: 28px;
                        width: calc(100% + 28px);
                        height: 36px;
                    }
                }
            }
        }
    }
}

// Status bar status icon animations
:host #status_bar.updating span#status {
    animation-name: status-bar-updating;
    animation-duration: var(--status-icon-updating--animation-duration, 1s);
    animation-iteration-count: infinite;
}

:host #status_bar span#status {
    animation-name: status-bar;
    animation-duration: var(--status-icon--animation-duration, 0.5s);
    animation-iteration-count: 1;
}

@keyframes status-bar-updating {
    0% {
        filter: var(--status-icon-updating-keyframes-start--filter, opacity(1));
        transform: var(--status-icon-updating-keyframes-start--transform, none);
    }

    100% {
        filter: var(--status-icon-updating-keyframes-end--filter, opacity(0.2));
        transform: var(--status-icon-updating-keyframes-end--transform, none);
    }
}

@keyframes status-bar {
    0% {
        filter: var(--status-icon-keyframes-start--filter, saturate(4));
        transform: var(--status-icon-keyframes-start--transform, none);
    }

    100% {
        filter: var(--status-icon-keyframes-end--filter, saturate(1));
        transform: var(--status-icon-keyframes-end--transform, none);
    }
}
